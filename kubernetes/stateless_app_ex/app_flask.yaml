apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "flask"
  namespace: "default"
  labels:
    app: "flask"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "flask"
  template:
    metadata:
      labels:
        app: "flask"
    spec:
      containers:
      - name: "flask"
        image: "k8s_miz_summary_flask"  # Image of the local flask app
        imagePullPolicy: Never          # For using local image, don't pull from repository
        env:
        - name: "POSTGRES_USER"
          valueFrom:
            configMapKeyRef:
              key: "POSTGRES_USER"
              name: "config"
        - name: "POSTGRES_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "POSTGRES_PASSWORD"
              name: "secret-pass"
        - name: "POSTGRES_PORT"
          value: "5432"
        - name: "POSTGRES_DB"
          valueFrom:
            configMapKeyRef:
              key: "POSTGRES_DB"
              name: "config"
        - name: "POSTGRES_HOST"
          value: postgres-service
      dnsPolicy: "None"                 # Don't use local DNS configuration resolver (needed bcuz of ubuntu) 
      dnsConfig:
        nameservers:
          - 10.96.0.10
        searches:
          - default.svc.cluster.local
          - svc.cluster.local
          - cluster.local
          - ec2.internal
        options:
          - name: ndots
            value: "5"

---
apiVersion: "v1"
kind: "Service"
metadata:
  name: "flask-service"
  namespace: "default"
  labels:
    app: "flask"
spec:
  type: NodePort                        # Open port on the nodes 
  selector:
    app: "flask"
  ports:
  - protocol: "TCP"
    port: 80
    targetPort: 5000
    nodePort: 30007
